#####################################
## DISCOVERY
#####################################
eureka:
  client:
    # 본인 서비스를 eureka 서버에 등록 할지 여부.(eureka는 서버이면서 client가 될 수도 있음)
    register-with-eureka: false
    # client 서비스가 eureka 서버로 부터 서비스 리스트 정보를 local에 caching 할지 여부
    # eureka server에 서비스 정보 요청 시 이 cache의 값을 이용 한다.
    fetch-registry: false
    service-url:
      default-zone: http://localhost:8761
  server:
    #    Eureka로의 네트워크는 단절되었지만, 해당 서비스 API를 호출하는데 문제가 없는 경우가 있을수 있어서,
    #    self-preservation 을 사용하여 registry에서 문제된 instance를 정해진 기간 동안 제거하지 않을 수 있다.
    #    eviction-interval-timer-in-ms: 60000
    #    enable-self-preservation: true
    #    Peer nodes 로부터 registry를 갱신할 수 없을 때 재시도 횟수
    #    eureka.server.registry-sync-retrires (default: 5)
    #    Peer nodes 로부터 registry를 갱신할 수 없을때 재시도를 기다리는 시간
    wait-time-in-ms-when-sync-empty: 3000

#####################################
## ACTUATOR
#####################################
management:
  endpoints:
    web:
      cors:
        allowed-origins: "*"
        allowed-methods: "*"
        allowedHeaders: "*"
        allowCredentials: true
      exposure:
        include: "*"
  metrics:
    tags:
      application: ${spring.application.name}